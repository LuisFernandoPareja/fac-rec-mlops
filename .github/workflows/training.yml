name: MLOps Pipeline training

on:
  workflow_dispatch:   # allow manual triggering

  push:
    paths:
      - 'data/**'
      - '*.dvc'
  

jobs:
  run-mlops:
    runs-on: ubuntu-latest

    steps:
    - name: 📥 Checkout repo
      uses: actions/checkout@v3

    - name: 🐍 Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: 📦 Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install dvc[gdrive]

    - name: 🔑 Set up DVC credentials
      env:
        GDRIVE_CREDENTIALS_DATA: ${{ secrets.GDRIVE_CREDENTIALS_JSON }}
      run: |
        echo "$GDRIVE_CREDENTIALS_DATA" | base64 --decode > dvc-ml-5a540d4ae328.json
        
        # Configure DVC to use the service account credentials
        dvc remote modify myremote gdrive_use_service_account true
        dvc remote modify myremote gdrive_service_account_json_file_path dvc-ml-5a540d4ae328.json

    - name: ⬇️ Pull data and models
      run: dvc pull
    
    - name: 🔄 Clone YOLOv5 repo
      run: |
        git clone https://github.com/ultralytics/yolov5.git
        cd yolov5
        pip install -r requirements.txt  # Make sure YOLOv5 dependencies are installed

    - name: 🛠️ Patch detect.py for CI
      run: |
        echo '
        import pathlib
        import sys
        from pathlib import Path

        # Fix WindowsPath issue on Linux
        if isinstance(Path(), pathlib.WindowsPath):
            pathlib.WindowsPath = pathlib.PosixPath

        # Ensure yolov5 is in the import path
        sys.path.append(str(Path(__file__).resolve().parent))
        ' | cat - yolov5/detect.py > temp && mv temp yolov5/detect.py
    
    - name: ✅ Run your test or script
      run: python yolov5/train.py --img 640 --batch 16 --epochs 30 --data yolo_dataset.yaml --weights models/best_collab.pt --name fer_exp

    - name: Save trained model
      run: |
        cp yolov5/runs/train/fer_exp/weights/best.pt models/best_trained.pt

    - name: Commit model
      run: |
        git config --global user.email "luisfercho2428@gmail.com"
        git config --global user.name "Fernando Pareja"
        git add models/best_trained.pt
        git commit -m "Trained model updated"
        git push
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
